---
import GitHub from "./icons/Github.astro"
import React from "./icons/React.astro"
import Angular from "./icons/Angular.astro"
import Docker from "./icons/Docker.astro"
import Vue from "./icons/Vue.astro";
import SpringBoot from "./icons/SpringBoot.astro";
import Microservices from "./icons/Microservices.astro";
import Link from "./icons/Link.astro"
import AspNet from "./icons/AspNet.astro";
import Flutter from "./icons/Flutter.astro";
import MySQL from "./icons/MySQL.astro"
import Python from "./icons/Python.astro";
import Cpp from "./icons/Cpp.astro";
import LinkButton from "./LinkButton.astro";
import Code from "./icons/Code.astro";
import n8n from "./icons/N8n.astro";
import "photoswipe/style.css"
import "swiper/css";
import "swiper/css/navigation";
import "swiper/css/pagination";
import 'swiper/swiper-bundle.css';
import 'swiper/element/bundle';

const TAGS = {
  REACT: {
    name: "React",
    class: "bg-[#61DAFB] text-black",
    icon: React,
  },
  DOCKER: {
    name: "Docker",
    class: "bg-[#2496ED] text-white",
    icon: Docker,
  },
  ANGULAR: {
    name: "Angular",
    class: "bg-[#C3002F] text-white",
    icon: Angular,
  },
  SPRINGBOOT:{
    name: "SpringBoot",
    class: "bg-[#6DB33F] text-white",
    icon: SpringBoot,
  },
  ASPNET:{
    name: ".NET Core",
    class: "bg-[#682995] text-white",
    icon: AspNet,
  },
  VUE:{
    name: "Vue",
    class: "bg-[#41B883] text-white",
    icon: Vue,
  },
  FLUTTER:{
    name: "Flutter",
    class: "bg-[#5EC8F8] text-white",
    icon: Flutter,
  },
  MICROSERVICES:{
    name: "Microservices",
    class: "bg-[#FF9901] text-white",
    icon: Microservices,
  },
  MYSQL:{
    name: "MySQL",
    class: "bg-[#136494] text-white",
    icon: MySQL,
  },
  PYTHON:{
    name: "Python",
    class: "bg-[#FFD342] text-white",
    icon: Python,
  },
  CODE:{
    name: "Code",
    class: "bg-[#000000] text-white",
    icon: Code,
  },
  N8N:{
    name: "n8n",
    class: "bg-[#FF4A00] text-white",
    icon: n8n,
  },
}

const PROJECTS = [
  
    {
        title: "N8N Automations",
        description:
        "These are automations that connect both with personal files in the cloud and with dynamic APIs from various applications, including Google, SUNAT, and Microsoft. \nAll with the goal of reducing efforts by applying automation to rigorous daily work by integrating business logic with flowcharts that can be automated by modules.\n\nThe first example shows a flow to transform a default XML CFGDATA template to modify its internal values according to information from an Excel file. This is done with the goal of automatically loading the file with all the required values for each addition to an Excel file. These values can then be loaded automatically. \n\nIn the second example, we work for an accounting firm, we obtain the clients' credentials, in order to obtain all their sales and purchase records by period from the SUNAT page using its API, after obtaining all the data from all the clients, we work with personalized reports by client, which are sent to the accounting firm for them to validate and manipulate, all in 2 and a half minutes.",
        images: ["/n8n/xml-automatization.jpeg","/n8n/xml-response.png","/n8n/fact-ventas-automatization.jpeg","/n8n/factreportresponsegmail.jpeg"],
        tags: [TAGS.CODE, TAGS.PYTHON, TAGS.N8N],
    },
    {
        title: "Ascensores Tools",
        description:
        "It's an application I created while working at Ascensores SA. \nIts goal was to replace the use of Microsoft Office and SharePoint in the company. We were looking for solutions to integrate our tools into a specific software, and the first area we migrated to this tool was the sales department.\n\n What is displayed is a customized tray for sales users, analyzed by the necessary data per project. The project also allows for adding and modifying DISTRICTS, OWNERS, and CONSTRUCTION COMPANIES. This project was designed by me and approved by the Systems Management of Ascensores SA.",
        images: ["/ascensores/loggin.png","/ascensores/home.jpeg","/ascensores/chart.jpeg",
        "/ascensores/nuevo-1.jpeg","/ascensores/nuevo-2.jpeg","/ascensores/nuevo-3.jpeg",
        "/ascensores/eliminar.jpeg","/ascensores/constructoras.jpeg","/ascensores/distritos.jpeg",
      "/ascensores/swagger.jpeg","/ascensores/front-npm.jpeg"],
        tags: [TAGS.REACT, TAGS.ASPNET, TAGS.MYSQL],
    },
    {
        title: "Redcorp - A business app",
        description:
        "Redcorp is a web and mobile platform that offers services to companies that require better organization and communication between employees across different departments, promoting work groups and development efficiency through a social network-like interface. Our target audience is companies looking for a web application to better manage their employee network and workgroup management.",
        link: "https://redcorp-web-app.web.app/",
        github: "https://github.com/redcorp-2023-1",
        images: ["/redcorp/redcorp.png","/redcorp/landingpage-inicio.png",
        "/redcorp/select.png","/redcorp/login.png","/redcorp/register.png",
        "/redcorp/home.png","/redcorp/secciones.png","/redcorp/comunicados.png"],
        tags: [TAGS.ASPNET, TAGS.VUE,TAGS.MICROSERVICES,TAGS.DOCKER],
    },
    {
        title: "LeadYourWay - An open source software for bicycle rental",
        description:
        "It was an application that I made in a startup made up of 5 people. In 4 months we managed to make a web application for bicycle rental, including payments, selection and preview of a bicycle, a business model between a lessor and a lessee.",
        github: "https://github.com/FabrizCastro/LeadYourWay-OpenSource",
        images: ["/leadyourway/landing.png"],
        link:"https://www.youtube.com/watch?v=iAh57LOrm10",
        tags: [TAGS.ANGULAR, TAGS.SPRINGBOOT],
    },
    {
        title: "Cyclespace - Mobile Application",
        description:
        "It's a mobile app based on the same bike rental business, but with the addition of virtual wallet payment features and the ability to change images using cameras.",
        github: "https://github.com/FabrizCastro/Cyclescape",
        images: ["/cyclescape/logo.png"],
        tags: [TAGS.FLUTTER, TAGS.SPRINGBOOT],
    },
    {
        title: "Kitchen-tech - Web App + IOT",
        description:
        "It was an application designed for use in a restaurant. Its function was to allow servers to record orders, pay at the register, add customers, and customize consumption, costs, and expenses. The IoT system was responsible for detecting the status of diners throughout their meal, interacting between the statuses of 'Empty Table, Eating, Waiting for Orders, Waiting, Reservation, and Payment Due.'",
        link:"https://www.youtube.com/watch?v=rSsDI6MaP-4&t=1s",
        github: "https://github.com/orgs/Techstudents-SW74/repositories",
        images: ["/kitchen/1.jpg","/kitchen/MUM3.png","/kitchen/fisico.png","/kitchen/wokwi.jpeg"],
        tags: [TAGS.VUE, TAGS.SPRINGBOOT,TAGS.MYSQL, TAGS.PYTHON],
    },
    {
        title: "Smart Contracts",
        description:
        "It is a appIt was a web application focused on the execution of contracts between companies or people who needed to hire an influencer or media person with a profile created in the application, the transaction was made using SmartContracts, it had to be integrated with Solidity using Ethereum to carry out the transaction, which was invoked by an API, and returned the amount of gas used, as well as the ETH and if the contract was applicable, with a date and the signature of both parties, as well as its specifications.",
        link:"https://smart-contracts-team.github.io/landing-page/",
        github: "https://github.com/orgs/Smart-Contracts-Team/repositories",
        images: ["/smart/home1.jpg","/smart/dashboard.png","/smart/services.jpg","smart/eth.png","/smart/data.png"],
        tags: [TAGS.ANGULAR, TAGS.SPRINGBOOT,TAGS.MYSQL, TAGS.MICROSERVICES],
    },
    {
        title: "Pichangapp",
        description:
        "It is still being created as part of my thesis, and is intended to be an intelligent sports venue booking management application using artificial intelligence. It will be used primarily for users as a chatbot integrated with NLP, and for administrators, the AI ​​aims to show suggestions regarding the improvement of court assignments, schedules, key customers, ROI, demand prediction, and interactive smart dashboards.",
        link:"https://pichangapp.github.io/pichangapp-landing-page/",
        images: ["/pichangapp/image 11.png"],
        tags: [TAGS.REACT, TAGS.SPRINGBOOT,TAGS.MYSQL, TAGS.MICROSERVICES, TAGS.DOCKER, TAGS.PYTHON],
    },
  
]
---
<!-- Script del lado cliente -->
<script is:client type="module">
  import { register } from 'swiper/element/bundle';
  import PhotoSwipeLightbox from "photoswipe/lightbox";

  register();

  const galleries = document.querySelectorAll('[id^="gallery-"]');
  galleries.forEach((gallery) => {
    const lightbox = new PhotoSwipeLightbox({
      gallery: gallery,
      children: "a",
      pswpModule: () => import("photoswipe"),
    });
    lightbox.init();
  });
</script>

<div class="flex flex-col gap-y-16">
  {
    PROJECTS.map(({ images, title, description, tags, link, github }) => (
        <article class="flex flex-col space-x-0 space-y-8 group md:flex-row md:space-x-8 md:space-y-0">
            <div class="w-full md:w-1/2">
                <div class="relative flex flex-col items-center col-span-6 row-span-5 gap-8 transition duration-500 ease-in-out transform shadow-xl overflow-clip rounded-xl sm:rounded-xl md:group-hover:-translate-y-1 md:group-hover:shadow-2xl lg:border lg:border-gray-800 lg:hover:border-gray-700 lg:hover:bg-gray-800/50">
                  <!-- Galería con solo la primera imagen visible -->
                  <div class="w-auto" id={`gallery-${title.replace(/\s+/g, '-')}`}>
                    <swiper-container
                      class="mySwiper min-h-[250px]"
                      navigation="true"
                      pagination="true"
                      space-between="10"
                      slides-per-view="1"
                    >
                      {images.map((img,index) => (
                        <swiper-slide key={index}>
                          <a
                            href={img}
                            target="_blank"
                            rel="noreferrer"
                            data-pswp-width="1600"
                            data-pswp-height="800"
                          >
                            <img
                              src={img}
                              class="aspect-video object-contain rounded-md"
                              loading="lazy"
                              alt={title}
                            />
                          </a>
                        </swiper-slide>
                      ))}
                    </swiper-container>
                  </div>


                  
                </div>
            </div>

            <div class="w-full md:w-1/2 md:max-w-lg">
                <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100">
                {title}
                </h3>
                <div class="flex flex-wrap mt-2">
                    <ul class="flex flex-wrap gap-2 mb-2">
                        {tags.map((tag) => (
                            <li>
                                <span class={`flex items-center gap-x-2 rounded-full text-xs ${tag.class} py-1 px-2`}>
                                    <tag.icon class="size-4" />
                                    {tag.name}
                                </span>
                            </li>
                        ))}
                    </ul>


                    <div 
                      class="mt-2 text-gray-700 dark:text-gray-400" 
                      style="white-space: pre-line;"
                    >
                      {description}
                    </div>

                    <footer class="flex items-end justify-start mt-4 gap-x-4">
                        {github && (
                            <LinkButton href={github}>
                            <GitHub class="size-6" />
                            Code
                            </LinkButton>
                        )}
                        {link && (
                            <LinkButton href={link}>
                            <Link class="size-4" />
                            Preview
                            </LinkButton>
                        )}
                    </footer>
                </div>
            </div>
        </article>
    ))
  }
</div>